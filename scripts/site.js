// Generated by CoffeeScript 1.4.0
var load, show;

window.posts = [];

window.config = {
  max_posts: 2
};

load = function(url, callback) {
  return $.ajax({
    url: url,
    dataType: 'json',
    error: function() {
      return console.dir(arguments);
    },
    success: function(data) {
      return callback(data);
    }
  });
};

show = function(slug) {
  if (slug == null) {
    slug = 'asdf';
  }
  return console.log("slug = " + slug);
};

window.router = Davis(function() {
  this.get('/', function(request) {
    return show(null);
  });
  this.get('/latest', function(request) {
    return show(null);
  });
  this.get('/about', function(request) {
    return show('about');
  });
  return this.get('/:post', function(request) {
    return show(request.params.post);
  });
});

$(function() {
  return load('posts/index.json', function(data) {
    var i, max, post, _i, _j, _len, _ref;
    window.posts = [];
    _ref = data.posts;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      post = _ref[_i];
      post.moment = moment(post.date, 'YYYY-MM-DDTHH:mmZ');
      post.date = post.moment.format('d MMM YYYY');
      post.dateValue = post.moment.valueOf();
      post.data = null;
      window.posts.push(post);
    }
    window.posts.sort(function(a, b) {
      return b.dateValue - a.dateValue;
    });
    max = window.posts.length > window.config.max_posts ? window.config.max_posts : window.posts.length;
    for (i = _j = 0; 0 <= max ? _j < max : _j > max; i = 0 <= max ? ++_j : --_j) {
      $('#posts').append("<li><a href=\"" + window.posts[i].slug + "\">" + window.posts[i].title + "</a> <span class=\"date\">" + window.posts[i].date + "</span></li>");
    }
    window.router.configure(function(config) {
      return config.generateRequestOnPageLoad = true;
    });
    return window.router.start();
  });
});
